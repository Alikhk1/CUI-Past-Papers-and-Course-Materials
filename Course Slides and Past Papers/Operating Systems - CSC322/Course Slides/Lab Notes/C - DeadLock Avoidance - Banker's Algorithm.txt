#include <stdio.h>
#include <stdbool.h>

void calculateNeed(int need[][10], int max[][10], int allot[][10], int P, int R) {
    for (int i = 0; i < P; i++) {
        for (int j = 0; j < R; j++) {
            need[i][j] = max[i][j] - allot[i][j];
        }
    }
}

bool isSafe(int processes[], int avail[], int max[][10], int allot[][10], int P, int R) {
    int need[P][R];
    calculateNeed(need, max, allot, P, R);

    bool finish[P];
    for (int i = 0; i < P; i++) {
        finish[i] = false;
    }

    int safeSeq[P];
    int work[R];
    for (int i = 0; i < R; i++) {
        work[i] = avail[i];
    }

    int count = 0;
    while (count < P) {
        bool found = false;
        for (int p = 0; p < P; p++) {
            if (!finish[p]) {
                int j;
                for (j = 0; j < R; j++) {
                    if (need[p][j] > work[j])
                        break;
                }
                if (j == R) {
                    for (int k = 0; k < R; k++)
                        work[k] += allot[p][k];
                    safeSeq[count++] = p;
                    finish[p] = true;
                    found = true;
                }
            }
        }
        if (!found) {
            printf("System is not in a safe state\n");
            return false;
        }
    }
    printf("System is in a safe state.\nSafe sequence is: ");
    for (int i = 0; i < P; i++) {
        printf("%d ", safeSeq[i]);
    }
    printf("\n");
    return true;
}

int main() {
    int P, R;
    printf("Enter the number of processes: ");
    scanf("%d", &P);
    printf("Enter the number of resources: ");
    scanf("%d", &R);

    int processes[P];
    for (int i = 0; i < P; i++) {
        processes[i] = i;
    }

    int avail[R];
    printf("Enter the available instances of each resource: \n");
    for (int i = 0; i < R; i++) {
        printf("Resource %d: ", i);
        scanf("%d", &avail[i]);
    }

    int max[P][R];
    printf("Enter the maximum instances for each process and resource: \n");
    for (int i = 0; i < P; i++) {
        for (int j = 0; j < R; j++) {
            printf("Process %d, Resource %d: ", i, j);
            scanf("%d", &max[i][j]);
        }
    }

    int allot[P][R];
    printf("Enter the allocated instances for each process and resource: \n");
    for (int i = 0; i < P; i++) {
        for (int j = 0; j < R; j++) {
            printf("Process %d, Resource %d: ", i, j);
            scanf("%d", &allot[i][j]);
        }
    }

    for (int i = 0; i < P; i++) {
        for (int j = 0; j < R; j++) {
            if (allot[i][j] > max[i][j]) {
                printf("Error: Allocated instances cannot be greater than maximum instances.\n");
                return -1;
            }
        }
    }

    isSafe(processes, avail, max, allot, P, R);
    return 0;
}
